/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { animate, style, AnimationBuilder } from '@angular/animations';
import { ListKeyManager } from '@angular/cdk/a11y';
import { isPlatformBrowser } from '@angular/common';
import { Component, ContentChildren, ElementRef, EventEmitter, HostListener, Inject, Input, Output, PLATFORM_ID, QueryList, Renderer2, ViewChild } from '@angular/core';
import { interval, BehaviorSubject, Subject } from 'rxjs';
import { filter, takeUntil } from 'rxjs/operators';
import { MatCarouselSlideComponent } from './carousel-slide/carousel-slide.component';
/** @enum {number} */
var Direction = {
    Left: 0,
    Right: 1,
    Index: 2,
};
Direction[Direction.Left] = 'Left';
Direction[Direction.Right] = 'Right';
Direction[Direction.Index] = 'Index';
var MatCarouselComponent = /** @class */ (function () {
    function MatCarouselComponent(animationBuilder, renderer, platformId) {
        this.animationBuilder = animationBuilder;
        this.renderer = renderer;
        this.platformId = platformId;
        this.timings = '250ms ease-in';
        this.hideArrows = true;
        this.hideIndicators = true;
        this.color = 'accent';
        this.proportion = 25;
        this.useKeyboard = false;
        this.useMouseWheel = false;
        this.change = new EventEmitter();
        this._autoplay = true;
        this.autoplay$ = new Subject();
        this.interval$ = new BehaviorSubject(5000);
        this.slides$ = new BehaviorSubject(null);
        this._maxWidth = 'auto';
        this.maxWidth$ = new Subject();
        this._loop = true;
        this.loop$ = new Subject();
        this._orientation = 'ltr';
        this.orientation$ = new Subject();
        this.timerStop$ = new Subject();
        this.destroy$ = new Subject();
        this.playing = false;
    }
    Object.defineProperty(MatCarouselComponent.prototype, "autoplay", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this.autoplay$.next(value);
            this._autoplay = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MatCarouselComponent.prototype, "interval", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this.interval$.next(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MatCarouselComponent.prototype, "loop", {
        get: /**
         * @return {?}
         */
        function () {
            return this._loop;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this.loop$.next(value);
            this._loop = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MatCarouselComponent.prototype, "maxWidth", {
        get: /**
         * @return {?}
         */
        function () {
            return this._maxWidth;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._maxWidth = value;
            this.maxWidth$.next();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MatCarouselComponent.prototype, "slides", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this.slides$.next(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MatCarouselComponent.prototype, "orientation", {
        get: /**
         * @return {?}
         */
        function () {
            return this._orientation;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this.orientation$.next(value);
            this._orientation = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MatCarouselComponent.prototype, "currentIndex", {
        get: /**
         * @return {?}
         */
        function () {
            if (this.listKeyManager) {
                return this.listKeyManager.activeItemIndex;
            }
            return 0;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MatCarouselComponent.prototype, "currentSlide", {
        get: /**
         * @return {?}
         */
        function () {
            if (this.listKeyManager) {
                return this.listKeyManager.activeItem;
            }
            return null;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    MatCarouselComponent.prototype.ngAfterContentInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.listKeyManager = new ListKeyManager(this.slidesList)
            .withVerticalOrientation(false)
            .withHorizontalOrientation(this._orientation)
            .withWrap(this._loop);
        this.listKeyManager.updateActiveItem(0);
        this.listKeyManager.change
            .pipe(takeUntil(this.destroy$))
            .subscribe(function () { return _this.playAnimation(); });
    };
    /**
     * @return {?}
     */
    MatCarouselComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.autoplay$.pipe(takeUntil(this.destroy$)).subscribe(function (value) {
            _this.stopTimer();
            _this.startTimer(value);
        });
        this.interval$.pipe(takeUntil(this.destroy$)).subscribe(function (value) {
            _this.stopTimer();
            _this.resetTimer(value);
            _this.startTimer(_this._autoplay);
        });
        this.maxWidth$
            .pipe(takeUntil(this.destroy$))
            .subscribe(function () { return _this.slideTo(0); });
        this.loop$
            .pipe(takeUntil(this.destroy$))
            .subscribe(function (value) { return _this.listKeyManager.withWrap(value); });
        this.orientation$
            .pipe(takeUntil(this.destroy$))
            .subscribe(function (value) { return _this.listKeyManager.withHorizontalOrientation(value); });
        this.slides$
            .pipe(takeUntil(this.destroy$), filter(function (value) { return value && value < _this.slidesList.length; }))
            .subscribe(function (value) { return _this.resetSlides(value); });
    };
    /**
     * @return {?}
     */
    MatCarouselComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this.destroy$.next();
        this.destroy$.complete();
    };
    /**
     * @return {?}
     */
    MatCarouselComponent.prototype.next = /**
     * @return {?}
     */
    function () {
        this.goto(Direction.Right);
    };
    /**
     * @return {?}
     */
    MatCarouselComponent.prototype.previous = /**
     * @return {?}
     */
    function () {
        this.goto(Direction.Left);
    };
    /**
     * @param {?} index
     * @return {?}
     */
    MatCarouselComponent.prototype.slideTo = /**
     * @param {?} index
     * @return {?}
     */
    function (index) {
        this.goto(Direction.Index, index);
    };
    /**
     * @param {?} event
     * @return {?}
     */
    MatCarouselComponent.prototype.onKeyUp = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (this.useKeyboard && !this.playing) {
            this.listKeyManager.onKeydown(event);
        }
    };
    /**
     * @return {?}
     */
    MatCarouselComponent.prototype.onMouseEnter = /**
     * @return {?}
     */
    function () {
        this.stopTimer();
    };
    /**
     * @return {?}
     */
    MatCarouselComponent.prototype.onMouseLeave = /**
     * @return {?}
     */
    function () {
        this.startTimer(this._autoplay);
    };
    /**
     * @param {?} event
     * @return {?}
     */
    MatCarouselComponent.prototype.onMouseWheel = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (this.useMouseWheel) {
            event.preventDefault(); // prevent window to scroll
            // prevent window to scroll
            /** @type {?} */
            var Δ = Math.sign(event.wheelDelta);
            if (Δ < 0) {
                this.next();
            }
            else if (Δ > 0) {
                this.previous();
            }
        }
    };
    /**
     * @param {?} event
     * @return {?}
     */
    MatCarouselComponent.prototype.onResize = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        // Reset carousel when window is resized
        // in order to avoid major glitches.
        this.slideTo(0);
    };
    /**
     * @param {?} event
     * @param {?} slideElem
     * @return {?}
     */
    MatCarouselComponent.prototype.onPan = /**
     * @param {?} event
     * @param {?} slideElem
     * @return {?}
     */
    function (event, slideElem) {
        /** @type {?} */
        var Δx = event.deltaX;
        if (this.isOutOfBounds()) {
            Δx *= 0.2; // decelerate movement;
        }
        this.renderer.setStyle(slideElem, 'cursor', 'grabbing');
        this.renderer.setStyle(this.carouselList.nativeElement, 'transform', this.getTranslation(this.getOffset() + Δx));
    };
    /**
     * @param {?} event
     * @param {?} slideElem
     * @return {?}
     */
    MatCarouselComponent.prototype.onPanEnd = /**
     * @param {?} event
     * @param {?} slideElem
     * @return {?}
     */
    function (event, slideElem) {
        this.renderer.removeStyle(slideElem, 'cursor');
        if (!this.isOutOfBounds() &&
            Math.abs(event.deltaX) > this.getWidth() * 0.25) {
            if (event.deltaX <= 0) {
                this.next();
                return;
            }
            this.previous();
            return;
        }
        this.playAnimation(); // slide back, don't change current index
    };
    /**
     * @private
     * @return {?}
     */
    MatCarouselComponent.prototype.isOutOfBounds = /**
     * @private
     * @return {?}
     */
    function () {
        /** @type {?} */
        var sign = this.orientation === 'rtl' ? -1 : 1;
        /** @type {?} */
        var left = sign *
            (this.carouselList.nativeElement.getBoundingClientRect().left -
                this.carouselList.nativeElement.offsetParent.getBoundingClientRect()
                    .left);
        /** @type {?} */
        var lastIndex = this.slidesList.length - 1;
        /** @type {?} */
        var width = -this.getWidth() * lastIndex;
        return ((this.listKeyManager.activeItemIndex === 0 && left >= 0) ||
            (this.listKeyManager.activeItemIndex === lastIndex && left <= width));
    };
    /**
     * @private
     * @return {?}
     */
    MatCarouselComponent.prototype.isVisible = /**
     * @private
     * @return {?}
     */
    function () {
        if (!isPlatformBrowser(this.platformId)) {
            return false;
        }
        /** @type {?} */
        var elem = this.carouselContainer.nativeElement;
        /** @type {?} */
        var docViewTop = window.pageYOffset;
        /** @type {?} */
        var docViewBottom = docViewTop + window.innerHeight;
        /** @type {?} */
        var elemOffset = elem.getBoundingClientRect();
        /** @type {?} */
        var elemTop = docViewTop + elemOffset.top;
        /** @type {?} */
        var elemBottom = elemTop + elemOffset.height;
        return elemBottom <= docViewBottom || elemTop >= docViewTop;
    };
    /**
     * @private
     * @return {?}
     */
    MatCarouselComponent.prototype.getOffset = /**
     * @private
     * @return {?}
     */
    function () {
        /** @type {?} */
        var offset = this.listKeyManager.activeItemIndex * this.getWidth();
        /** @type {?} */
        var sign = this.orientation === 'rtl' ? 1 : -1;
        return sign * offset;
    };
    /**
     * @private
     * @param {?} offset
     * @return {?}
     */
    MatCarouselComponent.prototype.getTranslation = /**
     * @private
     * @param {?} offset
     * @return {?}
     */
    function (offset) {
        return "translateX(" + offset + "px)";
    };
    /**
     * @private
     * @return {?}
     */
    MatCarouselComponent.prototype.getWidth = /**
     * @private
     * @return {?}
     */
    function () {
        return this.carouselContainer.nativeElement.clientWidth;
    };
    /**
     * @private
     * @param {?} direction
     * @param {?=} index
     * @return {?}
     */
    MatCarouselComponent.prototype.goto = /**
     * @private
     * @param {?} direction
     * @param {?=} index
     * @return {?}
     */
    function (direction, index) {
        if (!this.playing) {
            /** @type {?} */
            var rtl = this.orientation === 'rtl';
            switch (direction) {
                case Direction.Left:
                    return rtl
                        ? this.listKeyManager.setNextItemActive()
                        : this.listKeyManager.setPreviousItemActive();
                case Direction.Right:
                    return rtl
                        ? this.listKeyManager.setPreviousItemActive()
                        : this.listKeyManager.setNextItemActive();
                case Direction.Index:
                    return this.listKeyManager.setActiveItem(index);
            }
        }
    };
    /**
     * @private
     * @return {?}
     */
    MatCarouselComponent.prototype.playAnimation = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var translation = this.getTranslation(this.getOffset());
        /** @type {?} */
        var factory = this.animationBuilder.build(animate(this.timings, style({ transform: translation })));
        /** @type {?} */
        var animation = factory.create(this.carouselList.nativeElement);
        animation.onStart(function () { return (_this.playing = true); });
        animation.onDone(function () {
            _this.change.emit(_this.currentIndex);
            _this.playing = false;
            _this.renderer.setStyle(_this.carouselList.nativeElement, 'transform', translation);
            animation.destroy();
        });
        animation.play();
    };
    /**
     * @private
     * @param {?} slides
     * @return {?}
     */
    MatCarouselComponent.prototype.resetSlides = /**
     * @private
     * @param {?} slides
     * @return {?}
     */
    function (slides) {
        this.slidesList.reset(this.slidesList.toArray().slice(0, slides));
    };
    /**
     * @private
     * @param {?} value
     * @return {?}
     */
    MatCarouselComponent.prototype.resetTimer = /**
     * @private
     * @param {?} value
     * @return {?}
     */
    function (value) {
        this.timer$ = interval(value);
    };
    /**
     * @private
     * @param {?} autoplay
     * @return {?}
     */
    MatCarouselComponent.prototype.startTimer = /**
     * @private
     * @param {?} autoplay
     * @return {?}
     */
    function (autoplay) {
        var _this = this;
        if (!autoplay) {
            return;
        }
        this.timer$
            .pipe(takeUntil(this.timerStop$), takeUntil(this.destroy$), filter(function () { return _this.isVisible(); }))
            .subscribe(function () {
            _this.listKeyManager.withWrap(true).setNextItemActive();
            _this.listKeyManager.withWrap(_this.loop);
        });
    };
    /**
     * @private
     * @return {?}
     */
    MatCarouselComponent.prototype.stopTimer = /**
     * @private
     * @return {?}
     */
    function () {
        this.timerStop$.next();
    };
    MatCarouselComponent.decorators = [
        { type: Component, args: [{
                    selector: 'mat-carousel',
                    template: "<div\n  #carouselContainer\n  class=\"carousel\"\n  tabindex=\"0\"\n  [style.max-width]=\"maxWidth\"\n>\n  <ul\n    #carouselList\n    class=\"carousel-list\"\n    role=\"listbox\"\n    [style.flex-direction]=\"orientation === 'rtl' ? 'row-reverse' : 'row'\"\n  >\n    <li\n      #carouselSlide\n      *ngFor=\"let slide of slidesList\"\n      class=\"carousel-slide\"\n      role=\"option\"\n      [style.padding-bottom]=\"proportion + '%'\"\n      (panleft)=\"onPan($event, carouselSlide)\"\n      (panright)=\"onPan($event, carouselSlide)\"\n      (panend)=\"onPanEnd($event, carouselSlide)\"\n      (pancancel)=\"onPanEnd($event, carouselSlide)\"\n    >\n      <ng-container [ngTemplateOutlet]=\"slide.templateRef\"></ng-container>\n    </li>\n  </ul>\n\n  <button\n    *ngIf=\"!hideArrows\"\n    mat-icon-button\n    type=\"button\"\n    tabindex=\"-1\"\n    [color]=\"color\"\n    [disabled]=\"!loop && currentIndex == 0\"\n    (click)=\"previous()\"\n  >\n    <mat-icon\n      *ngIf=\"svgIconOverrides?.arrowBack; else: defaultArrowBack\"\n      [svgIcon]=\"svgIconOverrides.arrowBack\"\n    ></mat-icon>\n    <ng-template #defaultArrowBack>\n      <mat-icon>arrow_back</mat-icon>\n    </ng-template>\n  </button>\n  <button\n    *ngIf=\"!hideArrows\"\n    mat-icon-button\n    type=\"button\"\n    tabindex=\"-1\"\n    [color]=\"color\"\n    [disabled]=\"!loop && currentIndex == slidesList.length - 1\"\n    (click)=\"next()\"\n  >\n    <mat-icon\n      *ngIf=\"svgIconOverrides?.arrowForward; else: defaultArrowForward\"\n      [svgIcon]=\"svgIconOverrides.arrowForward\"\n    ></mat-icon>\n    <ng-template #defaultArrowForward>\n      <mat-icon>arrow_forward</mat-icon>\n    </ng-template>\n  </button>\n\n  <div\n    *ngIf=\"!hideIndicators\"\n    class=\"carousel-indicators\"\n    tabindex=\"-1\"\n    [style.flex-direction]=\"orientation === 'rtl' ? 'row-reverse' : 'row'\"\n  >\n    <button\n      *ngFor=\"let slide of slidesList; let i = index\"\n      type=\"button\"\n      tabindex=\"-1\"\n      mat-mini-fab\n      [color]=\"color\"\n      [disabled]=\"i == currentIndex\"\n      (click)=\"slideTo(i)\"\n      (focus)=\"carouselContainer.focus()\"\n    ></button>\n  </div>\n</div>\n",
                    styles: [".carousel{width:100%;position:relative;overflow:hidden;outline:0}.carousel>button{position:absolute;z-index:1;top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%)}.carousel>button:first-of-type{left:30px}.carousel>button:last-of-type{right:30px}.carousel-list{width:100%;margin:0;padding:0;list-style:none;display:flex;position:relative}.carousel-slide{width:100%;height:0;display:flex;flex-shrink:0;position:relative}.carousel-slide:hover{cursor:-webkit-grab;cursor:grab}.carousel-indicators{display:flex;position:absolute;bottom:15px;z-index:1;left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%);outline:0}.carousel-indicators>button{width:10px;height:10px;margin:7.5px}"]
                }] }
    ];
    /** @nocollapse */
    MatCarouselComponent.ctorParameters = function () { return [
        { type: AnimationBuilder },
        { type: Renderer2 },
        { type: undefined, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] }
    ]; };
    MatCarouselComponent.propDecorators = {
        timings: [{ type: Input }],
        svgIconOverrides: [{ type: Input }],
        autoplay: [{ type: Input }],
        interval: [{ type: Input }],
        loop: [{ type: Input }],
        hideArrows: [{ type: Input }],
        hideIndicators: [{ type: Input }],
        color: [{ type: Input }],
        maxWidth: [{ type: Input }],
        proportion: [{ type: Input }],
        slides: [{ type: Input }],
        useKeyboard: [{ type: Input }],
        useMouseWheel: [{ type: Input }],
        orientation: [{ type: Input }],
        change: [{ type: Output }],
        slidesList: [{ type: ContentChildren, args: [MatCarouselSlideComponent,] }],
        carouselContainer: [{ type: ViewChild, args: ['carouselContainer',] }],
        carouselList: [{ type: ViewChild, args: ['carouselList',] }],
        onKeyUp: [{ type: HostListener, args: ['keyup', ['$event'],] }],
        onMouseEnter: [{ type: HostListener, args: ['mouseenter',] }],
        onMouseLeave: [{ type: HostListener, args: ['mouseleave',] }],
        onMouseWheel: [{ type: HostListener, args: ['mousewheel', ['$event'],] }],
        onResize: [{ type: HostListener, args: ['window:resize', ['$event'],] }]
    };
    return MatCarouselComponent;
}());
export { MatCarouselComponent };
if (false) {
    /** @type {?} */
    MatCarouselComponent.prototype.timings;
    /** @type {?} */
    MatCarouselComponent.prototype.svgIconOverrides;
    /** @type {?} */
    MatCarouselComponent.prototype.hideArrows;
    /** @type {?} */
    MatCarouselComponent.prototype.hideIndicators;
    /** @type {?} */
    MatCarouselComponent.prototype.color;
    /** @type {?} */
    MatCarouselComponent.prototype.proportion;
    /** @type {?} */
    MatCarouselComponent.prototype.useKeyboard;
    /** @type {?} */
    MatCarouselComponent.prototype.useMouseWheel;
    /** @type {?} */
    MatCarouselComponent.prototype.change;
    /** @type {?} */
    MatCarouselComponent.prototype.slidesList;
    /**
     * @type {?}
     * @private
     */
    MatCarouselComponent.prototype.carouselContainer;
    /**
     * @type {?}
     * @private
     */
    MatCarouselComponent.prototype.carouselList;
    /** @type {?} */
    MatCarouselComponent.prototype.listKeyManager;
    /**
     * @type {?}
     * @private
     */
    MatCarouselComponent.prototype._autoplay;
    /**
     * @type {?}
     * @private
     */
    MatCarouselComponent.prototype.autoplay$;
    /**
     * @type {?}
     * @private
     */
    MatCarouselComponent.prototype.interval$;
    /**
     * @type {?}
     * @private
     */
    MatCarouselComponent.prototype.slides$;
    /**
     * @type {?}
     * @private
     */
    MatCarouselComponent.prototype._maxWidth;
    /**
     * @type {?}
     * @private
     */
    MatCarouselComponent.prototype.maxWidth$;
    /**
     * @type {?}
     * @private
     */
    MatCarouselComponent.prototype._loop;
    /**
     * @type {?}
     * @private
     */
    MatCarouselComponent.prototype.loop$;
    /**
     * @type {?}
     * @private
     */
    MatCarouselComponent.prototype._orientation;
    /**
     * @type {?}
     * @private
     */
    MatCarouselComponent.prototype.orientation$;
    /**
     * @type {?}
     * @private
     */
    MatCarouselComponent.prototype.timer$;
    /**
     * @type {?}
     * @private
     */
    MatCarouselComponent.prototype.timerStop$;
    /**
     * @type {?}
     * @private
     */
    MatCarouselComponent.prototype.destroy$;
    /**
     * @type {?}
     * @private
     */
    MatCarouselComponent.prototype.playing;
    /**
     * @type {?}
     * @private
     */
    MatCarouselComponent.prototype.animationBuilder;
    /**
     * @type {?}
     * @private
     */
    MatCarouselComponent.prototype.renderer;
    /**
     * @type {?}
     * @private
     */
    MatCarouselComponent.prototype.platformId;
}
//# sourceMappingURL=data:application/json;base64,