{"version":3,"file":"kamiazya-ngx-speech-recognition.umd.js.map","sources":["ng://@kamiazya/ngx-speech-recognition/lib/polifill.ts","ng://@kamiazya/ngx-speech-recognition/lib/service/speech-recognition.token.ts","node_modules/tslib/tslib.es6.js","ng://@kamiazya/ngx-speech-recognition/lib/service/speech-recognition.common.ts","ng://@kamiazya/ngx-speech-recognition/lib/service/rx-speech-recognition.service.ts","ng://@kamiazya/ngx-speech-recognition/lib/service/speech-recognition.service.ts","ng://@kamiazya/ngx-speech-recognition/lib/speech-recognition.provider.ts","ng://@kamiazya/ngx-speech-recognition/lib/speech-recognition.module.ts"],"sourcesContent":["if (window['webkitSpeechRecognition']) {\n  window['SpeechRecognition'] = window['webkitSpeechRecognition'];\n}\nif (window['webkitSpeechGrammarList']) {\n  window['SpeechGrammarList'] = window['webkitSpeechGrammarList'];\n}\n","import { InjectionToken } from '@angular/core';\n\nimport {\n  SpeechGrammarListType,\n} from '../adapter';\n\nexport const SpeechRecognitionGrammars = new InjectionToken<SpeechGrammarListType>('speech-recognition.grammars');\nexport const SpeechRecognitionLang = new InjectionToken<string>('speech-recognition.lang');\nexport const SpeechRecognitionContinuous = new InjectionToken<boolean>('speech-recognition.continuous');\nexport const SpeechRecognitionInterimResults = new InjectionToken<boolean>('speech-recognition.interimResults');\nexport const SpeechRecognitionMaxAlternatives = new InjectionToken<number>('speech-recognition.maxAlternatives');\nexport const SpeechRecognitionServiceUri = new InjectionToken<string>('speech-recognition.serviceURI');\nexport const SpeechRecognitionAudiostartHandler = new InjectionToken<(ev: Event) => any>('speech-recognition.onaudiostart');\nexport const SpeechRecognitionSoundstartHandler = new InjectionToken<(ev: Event) => any>('speech-recognition.onsoundstart');\nexport const SpeechRecognitionSpeechstartHandler = new InjectionToken<(ev: Event) => any>('speech-recognition.onspeechstart');\nexport const SpeechRecognitionSpeechendHandler = new InjectionToken<(ev: Event) => any>('speech-recognition.onspeechend');\nexport const SpeechRecognitionSoundendHandler = new InjectionToken<(ev: Event) => any>('speech-recognition.onsoundend');\nexport const SpeechRecognitionAudioendHandler = new InjectionToken<(ev: Event) => any>('speech-recognition.onaudioend');\nexport const SpeechRecognitionResultHandler = new InjectionToken<(ev: SpeechRecognitionEvent) => any>('speech-recognition.onresult');\nexport const SpeechRecognitionNomatchHandler = new InjectionToken<(ev: SpeechRecognitionEvent) => any>('speech-recognition.onnomatch');\nexport const SpeechRecognitionErrorHandler = new InjectionToken<(ev: SpeechRecognitionError) => any>('speech-recognition.onerror');\nexport const SpeechRecognitionStartHandler = new InjectionToken<(ev: Event) => any>('speech-recognition.onstart');\nexport const SpeechRecognitionEndHandler = new InjectionToken<(ev: Event) => any>('speech-recognition.onend');\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {\n  SpeechGrammarListType,\n} from '../adapter';\n\nexport class SpeechRecognitionCommon {\n\n  protected internal: SpeechRecognition = new SpeechRecognition();\n\n  constructor(\n    protected _grammars: SpeechGrammarListType,\n    protected _lang: string,\n    protected _continuous: boolean,\n    protected _interimResults: boolean,\n    protected _maxAlternatives: number,\n    protected _serviceURI: string,\n  ) { }\n\n\n  /**\n   * Property\n   */\n\n\n  // The grammars property of the SpeechRecognition interface returns and sets\n  // a collection of SpeechGrammar objects\n  // that represent the grammars that will be understood\n  // by the current SpeechRecognition.\n  //\n  // SpeechRecognitionã¤ã³ã¿ã¼ãã§ã¤ã¹ã®grammarsãã­ããã£ã¯ã\n  // ç¾å¨ã®SpeechRecognitionã§èªè­ãããææ³ãè¡¨ã\n  // SpeechGrammarãªãã¸ã§ã¯ãã®ã³ã¬ã¯ã·ã§ã³ãè¿ãã¦è¨­å®ãã¾ãã\n  get grammars(): SpeechGrammarListType {\n    return this._grammars;\n  }\n\n  set grammars(grammars: SpeechGrammarListType) {\n    this._grammars = grammars;\n    if (this._grammars !== undefined && this._grammars != null && this.internal) {\n      this.internal.grammars = this._grammars;\n    }\n  }\n\n  // The lang property of the SpeechRecognition interface returns\n  // and sets the language of the current SpeechRecognition.\n  // If not specified, this defaults to the HTML lang attribute value,\n  // or the user agent's language setting if that isn't set either.\n  //\n  // SpeechRecognitionã¤ã³ã¿ã¼ãã§ã¤ã¹ã®langãã­ããã£ã¯ã\n  // ç¾å¨ã®SpeechRecognitionã®è¨èªãè¿ãã¦è¨­å®ãã¾ãã\n  // æå®ããã¦ããªãå ´åãããã¯ããã©ã«ãã§HTMLã®langå±æ§ã®å¤ã\n  // ã¾ãã¯ã¦ã¼ã¶ã¨ã¼ã¸ã§ã³ãã®è¨èªè¨­å®ãè¨­å®ããã¦ããªãå ´åã¯\n  // ãã®å¤ã«ãªãã¾ãã\n  get lang(): string {\n    return this._lang;\n  }\n\n  set lang(lang: string) {\n    this._lang = lang;\n    if (this._lang !== undefined && this._lang != null && this.internal) {\n      this.internal.lang = this._lang;\n    }\n  }\n\n  // The continuous property of the SpeechRecognition interface controls\n  // whether continuous results are returned for each recognition, or only a single result.\n  //\n  // SpeechRecognitionã¤ã³ã¿ã¼ãã§ã¤ã¹ã®é£ç¶ãã­ããã£ã¯ã\n  // èªè­çµæãã¨ã«é£ç¶ããçµæãè¿ãããåä¸ã®çµæã®ã¿ãè¿ãããå¶å¾¡ãã¾ãã\n  get continuous(): boolean {\n    return this._continuous;\n  }\n\n  set continuous(continuous: boolean) {\n    this._continuous = continuous;\n    if (this._continuous !== undefined && this._continuous != null && this.internal) {\n      this.internal.continuous = this._continuous;\n    }\n  }\n\n  // The interimResults property of the SpeechRecognition interface controls\n  // whether interim results should be returned (true)\n  // or not (false.) Interim results are results that are not yet final\n  // (e.g. the SpeechRecognitionResult.isFinal property is false.)\n  //\n  // SpeechRecognitionã¤ã³ã¿ã¼ãã§ã¤ã¹ã®interimResultsãã­ããã£ã¯ã\n  // ä¸­éçµæãè¿ããã©ããï¼trueï¼ãããã§ãªããï¼falseï¼ãå¶å¾¡ãã¾ãã\n  // ä¸­éçµæã¯ãæçµæ®µéã§ã¯ãªãçµæã§ãï¼SpeechRecognitionResult.isFinalãã­ããã£ã¯falseã§ãï¼ã\n  get interimResults(): boolean {\n    return this._interimResults;\n  }\n  set interimResults(interimResults: boolean) {\n    this._interimResults = interimResults;\n    if (this._interimResults !== undefined && this._interimResults != null && this.internal) {\n      this.internal.interimResults = this._interimResults;\n    }\n  }\n\n  // The maxAlternatives property of the SpeechRecognition interface sets\n  // the maximum number of SpeechRecognitionAlternatives\n  // provided per SpeechRecognitionResult.\n  //\n  // SpeechRecognitionã¤ã³ã¿ã¼ãã§ã¤ã¹ã®maxAlternativesãã­ããã£ã¯ã\n  // SpeechRecognitionResultãã¨ã«æä¾ããã\n  // SpeechRecognitionAlternativesã®æå¤§æ°ãè¨­å®ãã¾ãã\n  get maxAlternatives(): number {\n    return this._maxAlternatives;\n  }\n  set maxAlternatives(maxAlternatives: number) {\n    this._maxAlternatives = maxAlternatives;\n    if (this._maxAlternatives !== undefined && this._maxAlternatives != null && this.internal) {\n      this.internal.maxAlternatives = this._maxAlternatives;\n    }\n  }\n\n  // The serviceURI property of the SpeechRecognition interface specifies\n  // the location of the speech recognition service\n  // used by the current SpeechRecognition to handle\n  // the actual recognition. The default is the user agent's\n  // default speech service.\n  //\n  // SpeechRecognitionã¤ã³ã¿ã¼ãã§ã¤ã¹ã®serviceURIãã­ããã£ã¯ã\n  // ç¾å¨ã®SpeechRecognitionãå®éã®èªè­ãå¦çããããã«ä½¿ç¨ãã\n  // é³å£°èªè­ãµã¼ãã¹ã®å ´æãæå®ãã¾ãã\n  // ããã©ã«ãã¯ã¦ã¼ã¶ã¨ã¼ã¸ã§ã³ãã®ããã©ã«ãé³å£°ãµã¼ãã¹ã§ãã\n  get serviceURI(): string {\n    return this._serviceURI;\n  }\n  set serviceURI(serviceURI: string) {\n    this._serviceURI = serviceURI;\n    if (this._serviceURI !== undefined && this._serviceURI != null && this.internal) {\n      this.internal.serviceURI = this._serviceURI;\n    }\n  }\n\n}\n","import {\n  Observable,\n  pipe,\n  UnaryFunction,\n  Subject,\n  BehaviorSubject,\n} from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { Injectable, ApplicationRef, Inject, Optional } from '@angular/core';\n\nimport {\n  SpeechRecognitionGrammars,\n  SpeechRecognitionLang,\n  SpeechRecognitionContinuous,\n  SpeechRecognitionInterimResults,\n  SpeechRecognitionMaxAlternatives,\n  SpeechRecognitionServiceUri,\n} from './speech-recognition.token';\n\nimport {\n  SpeechGrammarListType,\n  SpeechRecognitionServiceEvent,\n} from '../adapter';\n\nimport {\n  SpeechRecognitionCommon,\n} from './speech-recognition.common';\n\nconst onType = (type: string) => {\n  return filter((e: SpeechRecognitionServiceEvent) => (e.type === type));\n};\n\nexport const resultList: UnaryFunction<Observable<SpeechRecognitionEvent>, Observable<SpeechRecognitionResultList>> = pipe(\n  onType('result'),\n  map((e: SpeechRecognitionEvent): SpeechRecognitionResultList => e.results),\n);\n\n@Injectable()\nexport class RxSpeechRecognitionService extends SpeechRecognitionCommon {\n\n  private proxy$: Subject<SpeechRecognitionServiceEvent> = new Subject();\n\n  private _started$ = new BehaviorSubject<boolean>(false);\n\n  get $(): Observable<SpeechRecognitionServiceEvent> {\n    return this.proxy$ as Observable<SpeechRecognitionServiceEvent>;\n  }\n\n  get started$(): Observable<boolean> {\n    return this._started$ as Observable<boolean>;\n  }\n\n  constructor(\n    private ref: ApplicationRef,\n\n    @Optional() @Inject(SpeechRecognitionGrammars)\n    grammars: SpeechGrammarListType,\n\n    @Optional() @Inject(SpeechRecognitionLang)\n    lang: string,\n\n    @Optional() @Inject(SpeechRecognitionContinuous)\n    continuous: boolean,\n\n    @Optional() @Inject(SpeechRecognitionInterimResults)\n    interimResults: boolean,\n\n    @Optional() @Inject(SpeechRecognitionMaxAlternatives)\n    maxAlternatives: number,\n\n    @Optional() @Inject(SpeechRecognitionServiceUri)\n    serviceURI: string,\n  ) {\n    super(grammars, lang, continuous, interimResults, maxAlternatives, serviceURI);\n    this.initInternal();\n  }\n\n  private initInternal() {\n    // set handlers\n    const handler = (e) => {\n      this.proxy$.next(e);\n      this.ref.tick();\n    };\n    const errHandler = (e) => {\n      this.proxy$.error(e);\n      this.ref.tick();\n    };\n    this.internal.onaudiostart = handler;\n    this.internal.onsoundstart = handler;\n    this.internal.onspeechstart = handler;\n\n    this.internal.onspeechend = handler;\n    this.internal.onsoundend = handler;\n    this.internal.onaudioend = handler;\n\n    this.internal.onresult = handler;\n    this.internal.onnomatch = handler;\n    this.internal.onerror = errHandler;\n\n    this.internal.onstart = handler;\n    this.internal.onend = handler;\n\n    // see setter methods\n    this.grammars = this._grammars;\n    this.lang = this._lang;\n    this.continuous = this._continuous;\n    this.interimResults = this._interimResults;\n    this.maxAlternatives = this._maxAlternatives;\n    this.serviceURI = this._serviceURI;\n\n    this.proxy$.subscribe((e) => {\n      switch (e.type) {\n        case 'start':\n          this._started$.next(true);\n          break;\n        case 'end':\n          this._started$.next(false);\n          break;\n      }\n    });\n  }\n\n  // The listen() method aims to recognize the grammar associated with the current SpeechRecognition,\n  // Observable is returned for handling voice recognition service listening to incoming voice.\n  // When you subscrive the return value, listening begins and listening ends when an end event occurs.\n  // Interrupt listening by unsubscribing in the middle.\n  //\n  // listen() ã¡ã½ããã¯ãç¾å¨ã®SpeechRecognitionã«\n  // é¢é£ä»ããããææ³ãèªè­ãããã¨ãç®çã¨ãã¦ã\n  // çä¿¡é³å£°ãè´åããé³å£°èªè­ãµã¼ãã¹ãæ±ãããã®Observableãè¿ããã¾ãã\n  // è¿ãå¤ãsubscriveããã¨è´åãéå§ãããendã®ã¤ãã³ããçºçããã¨è´åãçµäºãã¾ãã\n  // éä¸­ã§unsbscriveãããã¨ã§è´åãä¸­æ­ãã¾ãã\n  public listen(): Observable<SpeechRecognitionServiceEvent> {\n\n    const listener = new Observable<SpeechRecognitionServiceEvent>((ovserver) => {\n      // create subscriotion\n      const subscriotion = this.proxy$.subscribe({\n        next: (e) => {\n          ovserver.next(e);\n\n          if (e.type && e.type === 'end') {\n            this.internal.stop();\n            ovserver.complete();\n            subscriotion.unsubscribe();\n          }\n        },\n        error: (e) => ovserver.error(e),\n      });\n\n      // Speech Recognition start\n      this.internal.start();\n\n      return () => {\n        this.internal.abort();\n        subscriotion.unsubscribe();\n      };\n    });\n\n    return listener;\n  }\n\n}\n","import {\n  Injectable,\n  ApplicationRef,\n  Inject,\n  Optional,\n} from '@angular/core';\n\nimport {\n  SpeechRecognitionGrammars,\n  SpeechRecognitionLang,\n  SpeechRecognitionContinuous,\n  SpeechRecognitionInterimResults,\n  SpeechRecognitionMaxAlternatives,\n  SpeechRecognitionServiceUri,\n  SpeechRecognitionAudiostartHandler,\n  SpeechRecognitionSoundstartHandler,\n  SpeechRecognitionSpeechstartHandler,\n  SpeechRecognitionSpeechendHandler,\n  SpeechRecognitionSoundendHandler,\n  SpeechRecognitionAudioendHandler,\n  SpeechRecognitionResultHandler,\n  SpeechRecognitionNomatchHandler,\n  SpeechRecognitionErrorHandler,\n  SpeechRecognitionStartHandler,\n  SpeechRecognitionEndHandler,\n} from './speech-recognition.token';\n\nimport {\n  SpeechGrammarListType,\n} from '../adapter';\n\nimport {\n  SpeechRecognitionCommon,\n} from './speech-recognition.common';\n\n// @dynamic\n@Injectable()\n/**\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Web_Speech_API\n */\nexport class SpeechRecognitionService extends SpeechRecognitionCommon {\n\n  private initHandlers() {\n    const _ = () => { };\n    if (!this.audiostartHandler) { this.audiostartHandler = _; }\n    if (!this.soundstartHandler) { this.soundstartHandler = _; }\n    if (!this.speechstartHandler) { this.speechstartHandler = _; }\n    if (!this.speechendHandler) { this.speechendHandler = _; }\n    if (!this.soundendHandler) { this.soundendHandler = _; }\n    if (!this.audioendHandler) { this.audioendHandler = _; }\n    if (!this.resultHandler) { this.resultHandler = _; }\n    if (!this.nomatchHandler) { this.nomatchHandler = _; }\n    if (!this.errorHandler) { this.errorHandler = _; }\n    if (!this.startHandler) { this.startHandler = _; }\n    if (!this.endHandler) { this.endHandler = _; }\n  }\n\n  private initInternal() {\n    // see setter methods\n    this.grammars = this._grammars;\n    this.lang = this._lang;\n    this.continuous = this._continuous;\n    this.interimResults = this._interimResults;\n    this.maxAlternatives = this._maxAlternatives;\n    this.serviceURI = this._serviceURI;\n\n    this.internal.onaudiostart = (e: Event) => {\n      this.audiostartHandler(e);\n      this.ref.tick();\n    };\n    this.internal.onsoundstart = (e: Event) => {\n      this.soundstartHandler(e);\n      this.ref.tick();\n    };\n    this.internal.onspeechstart = (e: Event) => {\n      this.speechstartHandler(e);\n      this.ref.tick();\n    };\n    this.internal.onspeechend = (e: Event) => {\n      this.speechendHandler(e);\n      this.ref.tick();\n    };\n    this.internal.onsoundend = (e: Event) => {\n      this.soundendHandler(e);\n      this.ref.tick();\n    };\n    this.internal.onaudioend = (e: Event) => {\n      this.audioendHandler(e);\n      this.ref.tick();\n    };\n    this.internal.onresult = (e: SpeechRecognitionEvent) => {\n      this.resultHandler(e);\n      this.ref.tick();\n    };\n    this.internal.onnomatch = (e: SpeechRecognitionEvent) => {\n      this.nomatchHandler(e);\n      this.ref.tick();\n    };\n    this.internal.onerror = (e: SpeechRecognitionError) => {\n      this.errorHandler(e);\n      this.ref.tick();\n    };\n    this.internal.onstart = (e: Event) => {\n      this.startHandler(e);\n      this.ref.tick();\n    };\n    this.internal.onend = (e: Event) => {\n      this.endHandler(e);\n      this.ref.tick();\n    };\n  }\n\n\n  constructor(\n    private ref: ApplicationRef,\n\n    @Optional() @Inject(SpeechRecognitionGrammars)\n    grammars: SpeechGrammarListType,\n\n    @Optional() @Inject(SpeechRecognitionLang)\n    lang: string,\n\n    @Optional() @Inject(SpeechRecognitionContinuous)\n    continuous: boolean,\n\n    @Optional() @Inject(SpeechRecognitionInterimResults)\n    interimResults: boolean,\n\n    @Optional() @Inject(SpeechRecognitionMaxAlternatives)\n    maxAlternatives: number,\n\n    @Optional() @Inject(SpeechRecognitionServiceUri)\n    serviceURI: string,\n\n    @Optional() @Inject(SpeechRecognitionAudiostartHandler)\n    private audiostartHandler: (ev: Event) => any,\n\n    @Optional() @Inject(SpeechRecognitionSoundstartHandler)\n    private soundstartHandler: (ev: Event) => any,\n\n    @Optional() @Inject(SpeechRecognitionSpeechstartHandler)\n    private speechstartHandler: (ev: Event) => any,\n\n    @Optional() @Inject(SpeechRecognitionSpeechendHandler)\n    private speechendHandler: (ev: Event) => any,\n\n    @Optional() @Inject(SpeechRecognitionSoundendHandler)\n    private soundendHandler: (ev: Event) => any,\n\n    @Optional() @Inject(SpeechRecognitionAudioendHandler)\n    private audioendHandler: (ev: Event) => any,\n\n    @Optional() @Inject(SpeechRecognitionResultHandler)\n    private resultHandler: (ev: SpeechRecognitionEvent) => any,\n\n    @Optional() @Inject(SpeechRecognitionNomatchHandler)\n    private nomatchHandler: (ev: SpeechRecognitionEvent) => any,\n\n    @Optional() @Inject(SpeechRecognitionErrorHandler)\n    private errorHandler: (ev: SpeechRecognitionError) => any,\n\n    @Optional() @Inject(SpeechRecognitionStartHandler)\n    private startHandler: (ev: Event) => any,\n\n    @Optional() @Inject(SpeechRecognitionEndHandler)\n    private endHandler: (ev: Event) => any\n  ) {\n    super(grammars, lang, continuous, interimResults, maxAlternatives, serviceURI);\n\n    this.initHandlers();\n\n    this.initInternal();\n  }\n\n\n  // The onaudiostart property of the SpeechRecognition interface\n  // represents an event handler that will run\n  // when the user agent has started to capture audio\n  // (when the audiostart event fires.)\n  //\n  // SpeechRecognitionã¤ã³ã¿ã¼ãã§ã¤ã¹ã®onaudiostartãã­ããã£ã¯ã\n  // ã¦ã¼ã¶ã¼ã¨ã¼ã¸ã§ã³ãããªã¼ãã£ãªã®ã­ã£ããã£ãéå§ããã¨ã\n  // ï¼audiostartã¤ãã³ããçºçããã¨ãï¼ã«å®è¡ãããã¤ãã³ããã³ãã©ã\n  // è¡¨ãã¾ãã\n  set onaudiostart(handler: (ev: Event) => any) {\n    this.audiostartHandler = handler;\n  }\n\n  // The onsoundstart property of the SpeechRecognition interface represents\n  // an event handler that will run when any sound\n  // â recognisable speech or not\n  // â has been detected (when the soundstart event fires.)\n  //\n  // SpeechRecognitionã¤ã³ã¿ã¼ãã§ã¤ã¹ã®onsoundstartãã­ããã£ã¯ã\n  // ãµã¦ã³ãèªè­å¯è½ãªé³å£°ãæ¤åºãããã¨ãã«å®è¡ãããã¤ãã³ããã³ãã©ãè¡¨ãã¾ã\n  // ï¼ãµã¦ã³ãã¹ã¿ã¼ãã¤ãã³ããçºçããã¨ãï¼ã\n  set onsoundstart(handler: (ev: Event) => any) {\n    this.soundstartHandler = handler;\n  }\n\n  // The onspeechstart property of the SpeechRecognition interface represents\n  // an event handler that will run when sound recognised\n  // by the speech recognition service as speech has been detected\n  // (when the speechstart event fires.)\n  //\n  // SpeechRecognitionã¤ã³ã¿ã¼ãã§ã¤ã¹ã®onspeechstartãã­ããã£ã¯ã\n  // ã¹ãã¼ããæ¤åºãããã¨ãï¼ã¹ãã¼ãéå§ã¤ãã³ããçºçããã¨ãï¼ã«\n  // é³å£°èªè­ãµã¼ãã¹ã«ãã£ã¦èªè­ããããµã¦ã³ããå®è¡ãããã¤ãã³ããã³ãã©ãè¡¨ãã¾ãã\n  set onspeechstart(handler: (ev: Event) => any) {\n    this.speechstartHandler = handler;\n  }\n\n  // The onspeechend property of the SpeechRecognition interface represents\n  // an event handler that will run when speech recognised\n  // by the speech recognition service has stopped being detected\n  // (when the speechend event fires.)\n  //\n  // SpeechRecognitionã¤ã³ã¿ã¼ãã§ã¤ã¹ã®onspeechendãã­ããã£ã¯ã\n  // é³å£°èªè­ãµã¼ãã¹ã«ãã£ã¦èªè­ãããé³å£°ãæ¤åºãããªããªã£ãã¨ã\n  // ï¼Speechendã¤ãã³ããçºçããã¨ãï¼ã«å®è¡ãããã¤ãã³ããã³ãã©ãè¡¨ãã¾ãã\n  set onspeechend(handler: (ev: Event) => any) {\n    this.speechendHandler = handler;\n  }\n\n  // The onsoundend property of the SpeechRecognition interface represents\n  // an event handler that will run when any sound\n  // â recognisable speech or not â has stopped being detected\n  // (when the soundend event fires.)\n  //\n  // SpeechRecognitionã¤ã³ã¿ã¼ãã§ã¤ã¹ã®onsoundendãã­ããã£ã¯ã\n  // ãµã¦ã³ãèªè­å¯è½ãªé³å£°ãæ¤åºãããªããªã£ãã¨ãã«å®è¡ãããã¤ãã³ããã³ãã©ãè¡¨ãã¾ã\n  // ï¼ãµã¦ã³ãã¨ã³ãã¤ãã³ããçºçããã¨ãï¼ã\n  set onsoundend(handler: (ev: Event) => any) {\n    this.soundendHandler = handler;\n  }\n\n  // The onaudioend property of the SpeechRecognition interface represents\n  // an event handler that will run\n  // when the user agent has finished capturing audio\n  // (when the audioend event fires.)\n  //\n  // SpeechRecognitionã¤ã³ã¿ã¼ãã§ã¤ã¹ã®onaudioendãã­ããã£ã¯ã\n  // ã¦ã¼ã¶ã¼ã¨ã¼ã¸ã§ã³ãããªã¼ãã£ãªã®ã­ã£ããã£ãçµäºããã¨ã\n  // ï¼ãªã¼ãã£ãªã¨ã³ãã¤ãã³ããçºçããã¨ãï¼ã«å®è¡ãããã¤ãã³ããã³ãã©ãè¡¨ãã¾ãã\n  set onaudioend(handler: (ev: Event) => any) {\n    this.audioendHandler = handler;\n  }\n\n  // The onresult property of the SpeechRecognition interface represents\n  // an event handler that will run\n  // when the speech recognition service returns a result\n  // â a word or phrase has been positively recognized\n  // and this has been communicated back to the app\n  // (when the result event fires.)\n  //\n  // SpeechRecognitionã¤ã³ã¿ã¼ãã§ã¤ã¹ã®onresultãã­ããã£ã¯ã\n  // é³å£°èªè­ãµã¼ãã¹ãçµæãè¿ãã¨ãã«å®è¡ãããã¤ãã³ããã³ãã©ãè¡¨ãã¾ãã\n  // åèªããã¬ã¼ãºãç¢ºå®ã«èªè­ãããçµæã¤ãã³ããçºçããã¨ãã«ã¢ããªã«è¿ããã¾ãã\n  set onresult(handler: (ev: SpeechRecognitionEvent) => any) {\n    this.resultHandler = handler;\n  }\n\n  // The onnomatch property of the SpeechRecognition interface represents\n  // an event handler that will run\n  // when the speech recognition service returns\n  // a final result with no significant recognition\n  // (when the nomatch event fires.)\n  //\n  // This may involve some degree of recognition\n  //  which doesn't meet or exceed the confidence threshold.\n  //\n  //\n  // SpeechRecognitionã¤ã³ã¿ã¼ãã§ã¤ã¹ã®onnomatchãã­ããã£ã¯ã\n  // é³å£°èªè­ãµã¼ãã¹ãéè¦ãªèªè­ãªãã«ï¼nomatchã¤ãã³ããçºçããã¨ãï¼\n  // æçµçµæãè¿ãã¨ãã«å®è¡ãããã¤ãã³ããã³ãã©ãè¡¨ãã¾ãã\n  //\n  // ããã«ã¯ãããç¨åº¦ã®èªè­ãå¿è¦ã§ãããããã¯ä¿¡é ¼éçãæºãããªããã\n  // è¶ãã¦ããã\n  set onnomatch(handler: (ev: SpeechRecognitionEvent) => any) {\n    this.nomatchHandler = handler;\n  }\n\n  // The onerror property of the SpeechRecognition interface represents\n  // an event handler that will run\n  // when a speech recognition error occurs\n  // (when the error event fires.)\n  //\n  // SpeechRecognitionã¤ã³ã¿ã¼ãã§ã¤ã¹ã®onerrorãã­ããã£ã¯ã\n  // é³å£°èªè­ã¨ã©ã¼ãçºçããã¨ãï¼ã¨ã©ã¼ã¤ãã³ããçºçããã¨ãï¼ã«\n  // å®è¡ãããã¤ãã³ããã³ãã©ãè¡¨ãã¾ãã\n  set onerror(handler: (ev: SpeechRecognitionError) => any) {\n    this.errorHandler = handler;\n  }\n\n  // The onstart property of the SpeechRecognition interface represents\n  // an event handler that will run when the speech\n  // recognition service has begun listening\n  // to incoming audio with intent to recognize grammars\n  // associated with the current SpeechRecognition\n  // (when the start event fires.)\n  //\n  //\n  // SpeechRecognitionã¤ã³ã¿ã¼ãã§ã¤ã¹ã®onstartãã­ããã£ã¯ã\n  // é³å£°èªè­ãµã¼ãã¹ãç¾å¨ã®SpeechRecognitionã«é¢é£ä»ãããã¦ããææ³ã\n  // èªè­ãããã¨ãç®çã¨ãã¦çä¿¡ãªã¼ãã£ãªãè´ãå§ããã¨ãã«å®è¡ããã\n  // ã¤ãã³ããã³ãã©ãè¡¨ãã¾ãï¼éå§ã¤ãã³ããçºçããã¨ãï¼ã\n  set onstart(handler: (ev: Event) => any) {\n    this.startHandler = handler;\n  }\n\n  // The onend property of the SpeechRecognition interface represents\n  // an event handler that will run when the speech recognition\n  // service has disconnected (when the end event fires.)\n  //\n  // SpeechRecognitionã¤ã³ã¿ã¼ãã§ã¤ã¹ã®onendãã­ããã£ã¯ã\n  // é³å£°èªè­ãµã¼ãã¹ãåæ­ãããã¨ãï¼çµäºã¤ãã³ããçºçããã¨ãï¼ã«\n  // å®è¡ãããã¤ãã³ããã³ãã©ãè¡¨ãã¾ãã\n  set onend(handler: (ev: Event) => any) {\n    this.endHandler = handler;\n  }\n\n  // The start() method of the Web Speech API starts the speech recognition service\n  // listening to incoming audio with intent to recognize grammars\n  // associated with the current SpeechRecognition.\n  //\n  // Web Speech APIã®startï¼ï¼ã¡ã½ããã¯ãç¾å¨ã®SpeechRecognitionã«\n  // é¢é£ä»ããããææ³ãèªè­ãããã¨ãç®çã¨ãã¦ã\n  // çä¿¡é³å£°ãè´åããé³å£°èªè­ãµã¼ãã¹ãéå§ãã¾ãã\n  public start(): void {\n    this.internal.start();\n    this.ref.tick();\n  }\n\n  // The stop() method of the Web Speech API stops the speech recognition service\n  // from listening to incoming audio, and attempts to return a SpeechRecognitionResult\n  // using the audio captured so far.\n  //\n  // Web Speech APIã®stopï¼ï¼ã¡ã½ããã¯ãé³å£°èªè­ãµã¼ãã¹ãçä¿¡é³å£°ãè´åããã®ãåæ­¢ãã\n  // ããã¾ã§ã«åå¾ããé³å£°ãä½¿ç¨ãã¦SpeechRecognitionResultãè¿ããã¨ãã¾ãã\n  public stop(): void {\n    this.internal.stop();\n    this.ref.tick();\n  }\n\n  // The abort() method of the Web Speech API stops the speech recognition service\n  // from listening to incoming audio, and doesn't attempt to return\n  // a SpeechRecognitionResult.\n  //\n  // Web Speech APIã®abortï¼ï¼ã¡ã½ããã¯ãé³å£°èªè­ãµã¼ãã¹ãçä¿¡ãªã¼ãã£ãªãè´ãã®ãããã\n  // SpeechRecognitionResultãè¿ããã¨ãã¾ããã\n  public abort(): void {\n    this.internal.abort();\n    this.ref.tick();\n  }\n\n\n}\n","import { Provider } from '@angular/core';\n\nimport {\n  SpeechRecognitionContinuous,\n  SpeechRecognitionInterimResults,\n  SpeechRecognitionMaxAlternatives,\n} from './service/speech-recognition.token';\n\n// tslint:disable-next-line:class-name\nexport const SPEECH_RECOGNITION_DEFAULT: Provider[] = [\n  {\n    provide: SpeechRecognitionContinuous,\n    useValue: false,\n  },\n  {\n    provide: SpeechRecognitionInterimResults,\n    useValue: false,\n  },\n  {\n    provide: SpeechRecognitionMaxAlternatives,\n    useValue: 1,\n  },\n];\n","import {\n  NgModule,\n  ModuleWithProviders,\n  Inject,\n  PLATFORM_ID,\n} from '@angular/core';\n\nimport {\n  isPlatformBrowser,\n} from '@angular/common';\n\nimport {\n  SpeechRecognitionGrammars,\n  SpeechRecognitionLang,\n  SpeechRecognitionContinuous,\n  SpeechRecognitionInterimResults,\n  SpeechRecognitionMaxAlternatives,\n  SpeechRecognitionServiceUri,\n  SpeechRecognitionAudiostartHandler,\n  SpeechRecognitionSoundstartHandler,\n  SpeechRecognitionSpeechstartHandler,\n  SpeechRecognitionSpeechendHandler,\n  SpeechRecognitionSoundendHandler,\n  SpeechRecognitionAudioendHandler,\n  SpeechRecognitionResultHandler,\n  SpeechRecognitionNomatchHandler,\n  SpeechRecognitionErrorHandler,\n  SpeechRecognitionStartHandler,\n  SpeechRecognitionEndHandler,\n} from './service/speech-recognition.token';\n\nimport {\n  RxSpeechRecognitionService,\n} from './service/rx-speech-recognition.service';\nimport {\n  SpeechRecognitionService,\n} from './service/speech-recognition.service';\n\nimport { SpeechRecognitionConfig } from './speech-recognition.config';\nimport { SPEECH_RECOGNITION_DEFAULT } from './speech-recognition.provider';\n\n@NgModule({\n  providers: [\n    SPEECH_RECOGNITION_DEFAULT,\n  ],\n})\nexport class SpeechRecognitionModule {\n\n  constructor(\n    @Inject(PLATFORM_ID) platformId: string\n  ) {\n    if (isPlatformBrowser(platformId) === false) {\n      throw new Error('SpeechRecognitionModule: it run on PlatformBrowser.');\n    }\n  }\n\n  static forRoot(config: SpeechRecognitionConfig): ModuleWithProviders {\n    return {\n      ngModule: SpeechRecognitionModule,\n      providers: [\n        // tslint:disable:max-line-length\n        ...(config.grammars !== undefined && config.grammars != null ? [{ useValue: config.grammars, provide: SpeechRecognitionGrammars }] : []),\n        ...(config.lang !== undefined && config.lang != null ? [{ useValue: config.lang, provide: SpeechRecognitionLang }] : []),\n        ...(config.continuous !== undefined && config.continuous != null ? [{ useValue: config.continuous, provide: SpeechRecognitionContinuous }] : []),\n        ...(config.interimResults !== undefined && config.interimResults != null ? [{ useValue: config.interimResults, provide: SpeechRecognitionInterimResults }] : []),\n        ...(config.maxAlternatives !== undefined && config.maxAlternatives != null ? [{ useValue: config.maxAlternatives, provide: SpeechRecognitionMaxAlternatives }] : []),\n        ...(config.serviceURI !== undefined && config.serviceURI != null ? [{ useValue: config.serviceURI, provide: SpeechRecognitionServiceUri }] : []),\n        ...(config.onaudiostart instanceof Function ? [{ useValue: config.onaudiostart, provide: SpeechRecognitionAudiostartHandler }] : []),\n        ...(config.onsoundstart instanceof Function ? [{ useValue: config.onsoundstart, provide: SpeechRecognitionSoundstartHandler }] : []),\n        ...(config.onspeechstart instanceof Function ? [{ useValue: config.onspeechstart, provide: SpeechRecognitionSpeechstartHandler }] : []),\n        ...(config.onspeechend instanceof Function ? [{ useValue: config.onspeechend, provide: SpeechRecognitionSpeechendHandler }] : []),\n        ...(config.onsoundend instanceof Function ? [{ useValue: config.onsoundend, provide: SpeechRecognitionSoundendHandler }] : []),\n        ...(config.onaudioend instanceof Function ? [{ useValue: config.onaudioend, provide: SpeechRecognitionAudioendHandler }] : []),\n        ...(config.onresult instanceof Function ? [{ useValue: config.onresult, provide: SpeechRecognitionResultHandler }] : []),\n        ...(config.onnomatch instanceof Function ? [{ useValue: config.onnomatch, provide: SpeechRecognitionNomatchHandler }] : []),\n        ...(config.onerror instanceof Function ? [{ useValue: config.onerror, provide: SpeechRecognitionErrorHandler }] : []),\n        ...(config.onstart instanceof Function ? [{ useValue: config.onstart, provide: SpeechRecognitionStartHandler }] : []),\n        ...(config.onend instanceof Function ? [{ useValue: config.onend, provide: SpeechRecognitionEndHandler }] : []),\n        { useClass: SpeechRecognitionService, provide: SpeechRecognitionService },\n        { useClass: RxSpeechRecognitionService, provide: RxSpeechRecognitionService }\n      ],\n    };\n  }\n\n  static withConfig(config: SpeechRecognitionConfig): ModuleWithProviders {\n    return {\n      ngModule: SpeechRecognitionModule,\n      providers: [\n        // tslint:disable:max-line-length\n        ...(config.grammars !== undefined && config.grammars != null ? [{ useValue: config.grammars, provide: SpeechRecognitionGrammars }] : []),\n        ...(config.lang !== undefined && config.lang != null ? [{ useValue: config.lang, provide: SpeechRecognitionLang }] : []),\n        ...(config.continuous !== undefined && config.continuous != null ? [{ useValue: config.continuous, provide: SpeechRecognitionContinuous }] : []),\n        ...(config.interimResults !== undefined && config.interimResults != null ? [{ useValue: config.interimResults, provide: SpeechRecognitionInterimResults }] : []),\n        ...(config.maxAlternatives !== undefined && config.maxAlternatives != null ? [{ useValue: config.maxAlternatives, provide: SpeechRecognitionMaxAlternatives }] : []),\n        ...(config.serviceURI !== undefined && config.serviceURI != null ? [{ useValue: config.serviceURI, provide: SpeechRecognitionServiceUri }] : []),\n        ...(config.onaudiostart instanceof Function ? [{ useValue: config.onaudiostart, provide: SpeechRecognitionAudiostartHandler }] : []),\n        ...(config.onsoundstart instanceof Function ? [{ useValue: config.onsoundstart, provide: SpeechRecognitionSoundstartHandler }] : []),\n        ...(config.onspeechstart instanceof Function ? [{ useValue: config.onspeechstart, provide: SpeechRecognitionSpeechstartHandler }] : []),\n        ...(config.onspeechend instanceof Function ? [{ useValue: config.onspeechend, provide: SpeechRecognitionSpeechendHandler }] : []),\n        ...(config.onsoundend instanceof Function ? [{ useValue: config.onsoundend, provide: SpeechRecognitionSoundendHandler }] : []),\n        ...(config.onaudioend instanceof Function ? [{ useValue: config.onaudioend, provide: SpeechRecognitionAudioendHandler }] : []),\n        ...(config.onresult instanceof Function ? [{ useValue: config.onresult, provide: SpeechRecognitionResultHandler }] : []),\n        ...(config.onnomatch instanceof Function ? [{ useValue: config.onnomatch, provide: SpeechRecognitionNomatchHandler }] : []),\n        ...(config.onerror instanceof Function ? [{ useValue: config.onerror, provide: SpeechRecognitionErrorHandler }] : []),\n        ...(config.onstart instanceof Function ? [{ useValue: config.onstart, provide: SpeechRecognitionStartHandler }] : []),\n        ...(config.onend instanceof Function ? [{ useValue: config.onend, provide: SpeechRecognitionEndHandler }] : []),\n      ]\n    };\n  }\n}\n"],"names":["InjectionToken","filter","pipe","map","tslib_1.__extends","Subject","BehaviorSubject","Observable","Injectable","ApplicationRef","Optional","Inject","isPlatformBrowser","NgModule","PLATFORM_ID"],"mappings":"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"}
